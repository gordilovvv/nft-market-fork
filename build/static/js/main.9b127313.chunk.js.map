{"version":3,"sources":["connectors/index.ts","reportWebVitals.ts","state/state.tsx","utils/fetchers.ts","utils/toShort.ts","components/Token/Token.tsx","utils/index.ts","utils/formatPriceEth.ts","components/Header/Header.tsx","components/Gallery/Gallery.tsx","components/UserMenu/UserMenu.tsx","components/PrivateRoute/PrivateRoute.tsx","components/Identicon/Identicon.tsx","components/TransactionProgress/TransactionProgress.tsx","components/Login/Login.tsx","layout/Marketplace.tsx","layout/Root.tsx","layout/Profile.tsx","layout/Connect.tsx","hooks/web3.ts","theme/index.ts","index.tsx"],"names":["ConnectorNames","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useAppState","create","set","get","isAuthenticated","contract","undefined","user","tokensOnSale","ethPrice","activatingConnector","transaction","setAuthenticated","authenticated","setContract","library","chainId","Error","address","Contract","NFTT","abi","getSigner","name","symbol","contractDetails","console","log","setUser","getUserTokens","utils","getBalance","balance","formatEther","ownedTokens","setTokensOnSale","setEthPrice","setActivatingConnector","setTransaction","userAddress","ownedTokensEvents","filters","Transfer","queryFilter","results","Map","Promise","all","map","current","ownerOf","args","tokenId","tokenMeta","id","price","tokenURI","uri","Array","from","buyToken","purchaseToken","value","tx","error","updateTokensOnSale","getAllOnSale","tokensForSale","reduce","acc","b","push","setTokenSale","onSale","transferToken","to","fetcherETHUSD","url","getState","fetch","json","ethusd","result","fetcherMetadata","message","fetchOwner","toShort","factor","slice","Math","round","length","substr","Token","token","isOnSale","onTransfer","onBuy","useState","transfer","setTransfer","onSaleActive","setOnSale","setAddress","setPrice","buyError","setBuyError","onTransferClick","e","preventDefault","isAddress","onBuyClick","r","onSaleClick","parseEther","owner","useSWR","data","tokenPriceEth","Intl","NumberFormat","style","currency","format","Number","formatPriceEth","variant","sx","width","bg","borderBottom","src","image","p","pt","as","color","fontSize","fontWeight","m","constants","EtherSymbol","toFixed","mt","target","href","textOverflow","position","overflow","justifyContent","onSubmit","flexDirection","onChange","currentTarget","placeholder","onClick","ml","opacity","find","a","formatUnits","pointerEvents","Header","history","useHistory","location","useLocation","alignItems","cursor","display","py","pathname","Gallery","useCallback","order","setOrder","useEffect","mb","mr","disabled","gap","columns","sort","BigNumber","toString","localeCompare","numeric","sub","i","index","t","UserMenu","justifySelf","textAlign","height","borderRadius","size","PrivateRoute","Component","component","path","render","props","Identicon","ref","useRef","innerHTML","appendChild","jazzicon","parseInt","TransactionProgress","transactionRef","loading","setLoading","update","subscribe","wait","confirmations","destroy","hash","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","qrcode","infuraId","rpc","connectorsByName","Metamask","WalletConnect","iconsMap","Login","useWeb3React","connector","activate","Object","keys","currentConnector","activating","connected","borderColor","maxWidth","Marketplace","active","getLibrary","provider","Web3Provider","pollingInterval","Root","basename","Profile","exact","my","getErrorMessage","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","Connect","children","account","triedEager","tried","setTried","isAuthorized","catch","useEagerConnect","suppress","ethereum","window","autoRefreshOnNetworkChange","useInactiveListener","breakpoints","space","fontSizes","fonts","body","heading","layout","container","px","pb","sizes","header","button","logo","sidemenu","chart","cards","nft","border","top","right","links","nav","transition","openSea","content","buttons","primary","fontFamily","lineHeight","paddingX","paddingY","outline","whiteSpace","minWidth","secondary","tertiary","quartiary","filter","connect","fontWeights","bold","lineHeights","subheading","colors","text","white","background","gray","lightGray","midGray","lightBlue","navy","green","amber","lightGreen","red","muted","transparent","white20","black66","divider","forms","input","paragraph","letterSpacing","h1","h2","h3","h4","h5","styles","root","hr","ReactDOM","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.9b127313.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\n// import { LedgerConnector } from '@web3-react/ledger-connector'\n// import { TrezorConnector } from '@web3-react/trezor-connector'\n// import { LatticeConnector } from '@web3-react/lattice-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// // import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// // import { MagicConnector } from '@web3-react/magic-connector'\n// // import { PortisConnector } from '@web3-react/portis-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nexport enum ConnectorNames {\n  Metamask = 'Metamask',\n  WalletConnect = 'WalletConnect',\n}\n\n// const POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  5: 'https://rpc.ankr.com/eth_goerli'\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [5] })\n\n// export const network = new NetworkConnector({\n//   urls: {\n//     1337: RPC_URLS[1],\n//     4: RPC_URLS[4],\n//   },\n//   defaultChainId: 1337,\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  qrcode: true,\n  // pollingInterval: POLLING_INTERVAL,\n  infuraId: '5c660c4dfdee4861899d5e46bacc4358',\n  rpc: { 5: RPC_URLS[5] },\n  chainId: 5,\n  supportedChainIds: [5],\n})\n\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'NFT-marketplace',\n// })\n\n// export const ledger = new LedgerConnector({\n//   chainId: 1,\n//   url: RPC_URLS[1],\n//   pollingInterval: POLLING_INTERVAL,\n// })\n\n// export const trezor = new TrezorConnector({\n//   chainId: 1,\n//   url: RPC_URLS[1],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:3000',\n// })\n\n// export const lattice = new LatticeConnector({\n//   chainId: 4,\n//   appName: 'NFT-marketplace',\n//   url: RPC_URLS[4],\n// })\n\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n\n// export const fortmatic = new FortmaticConnector({\n//   apiKey: process.env.REACT_APP_FORTMATIC_API_KEY as string,\n//   chainId: 4,\n// })\n\n// export const magic = new MagicConnector({\n//   apiKey: process.env.REACT_APP_MAGIC_API_KEY as string,\n//   chainId: 4,\n//   email: 'hello@example.org',\n// })\n\n// export const portis = new PortisConnector({\n//   dAppId: process.env.REACT_APP_PORTIS_DAPP_ID as string,\n//   networks: [1, 100],\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Metamask]: injected,\n  // [ConnectorNames.Network]: network,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  // [ConnectorNames.WalletLink]: walletlink,\n  // [ConnectorNames.Ledger]: ledger,\n  // [ConnectorNames.Trezor]: trezor,\n  // [ConnectorNames.Lattice]: lattice,\n  // [ConnectorNames.Frame]: frame,\n  // [ConnectorNames.Authereum]: authereum,\n  // [ConnectorNames.Fortmatic]: fortmatic,\n  // [ConnectorNames.Magic]: magic,\n  // [ConnectorNames.Portis]: portis,\n  // [ConnectorNames.Torus]: torus,\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import NFTT from '@fluuuid/nft-contracts/build/contracts/NFTT.json'\nimport create from 'zustand'\nimport { BigNumber, Contract, utils, Event } from 'ethers'\n\nimport { TokenProps } from '../components/Token'\nimport { ContractPropsDetails, UserProps } from '../types'\nexport interface StateContext {\n  isAuthenticated: boolean\n  contract?: Contract\n  contractDetails?: ContractPropsDetails\n  user?: UserProps\n  tokensOnSale?: TokenProps[]\n  ethPrice?: string\n  activatingConnector?: any\n  transaction?: any\n  library?: any\n\n  setAuthenticated(authenticated: boolean): void\n  setContract(library: any, chainId: number): void\n  setTokensOnSale(tokensOnSale: TokenProps[]): void\n  setEthPrice(ethPrice: string): void\n  setActivatingConnector(activatingConnector: any): void\n  setTransaction(transaction: any): void\n  //\n  buyToken(id: string, price: BigNumber): Promise<{ error?: string }>\n  setUser(address?: string): void\n  updateTokensOnSale(): Promise<boolean>\n  setTokenSale(id: string, price: BigNumber, onSale: boolean): Promise<boolean>\n  transferToken(id: string, to: string): void\n  getUserTokens(address?: string): Promise<TokenProps[]>\n}\n\nconst useAppState = create<StateContext>((set, get) => ({\n  isAuthenticated: false,\n  contract: undefined,\n  user: undefined,\n  tokensOnSale: [],\n  ethPrice: '0.0',\n  activatingConnector: undefined,\n  transaction: undefined,\n\n  setAuthenticated: (authenticated: boolean) => set({ isAuthenticated: authenticated }),\n  setContract: async (library: any, chainId: number) => {\n    try {\n      if (!library) throw new Error('No Web3 Found')\n\n      const deployedNetwork = {\n        \"events\": {},\n        \"links\": {},\n        \"address\": \"0x95ACD91Fa920C8ff66304dD40aed6c848D001103\",\n        \"transactionHash\": \"0xdf932931c8b07d1381dc6369d0e22123483192155b2ab7f094a07d81c164f5b8\"\n      };\n\n      const { address } = deployedNetwork\n      const contract = new Contract(address, NFTT.abi, library.getSigner())\n\n      const name = await contract.name()\n      const symbol = await contract.symbol()\n\n      set({\n        library,\n        contract,\n        contractDetails: {\n          name,\n          symbol,\n          address,\n        },\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  },\n  setUser: async (address?: string) => {\n    try {\n      const { contract, user, library, getUserTokens } = get()\n\n      if (!library) throw new Error('No Web3 Found')\n      if (!contract) throw new Error('No contract found')\n      if (!user && !address) throw new Error('No user found')\n\n      const balance = utils.formatEther(await library.getBalance(address || user?.address || ''))\n      const ownedTokens = await getUserTokens(address || user?.address)\n\n      set({\n        isAuthenticated: true,\n        user: { address: address || user?.address || '', balance, ownedTokens },\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  },\n  setTokensOnSale: (tokensOnSale: TokenProps[]) => set({ tokensOnSale: tokensOnSale }),\n  setEthPrice: (ethPrice: string) => set({ ethPrice: ethPrice }),\n  setActivatingConnector: (activatingConnector: any) =>\n    set({ activatingConnector: activatingConnector }),\n  setTransaction: (transaction: any) => set({ transaction: transaction }),\n\n  //\n  getUserTokens: async (address?: string): Promise<TokenProps[]> => {\n    try {\n      const { contract, library, user } = get()\n\n      if (!library) throw new Error('No Web3 Found')\n      if (!contract) throw new Error('No contract found')\n      if (!user?.address && !address) throw new Error('No user found')\n\n      const userAddress = user?.address || address\n\n      const ownedTokensEvents = contract.filters.Transfer(null, userAddress)\n      const results: Event[] = await contract.queryFilter(ownedTokensEvents, 0, 'latest')\n\n      const ownedTokens: Map<string, TokenProps> = new Map()\n      await Promise.all(\n        results.map(async current => {\n          const ownerToken = await contract.ownerOf(current.args?.tokenId)\n\n          if (ownerToken === userAddress) {\n            const { id, name, price } = await contract.tokenMeta(current.args?.tokenId)\n            const uri = await contract.tokenURI(current.args?.tokenId)\n\n            ownedTokens.set(uri, {\n              id,\n              name,\n              price,\n              uri,\n            })\n          }\n        })\n      )\n\n      return Array.from(ownedTokens).map(([_, token]) => token)\n    } catch (e) {\n      console.log(e)\n      return []\n    }\n  },\n\n  buyToken: async (id: string, price: BigNumber) => {\n    try {\n      const { setTransaction, contract } = get()\n      if (!contract) throw new Error('No contract found')\n      const tx = await contract.purchaseToken(id, { value: price })\n      setTransaction(tx)\n\n      return {};\n    } catch (e) {\n      return {\n        error: ' insufficient funds for gas'\n      }\n    }\n  },\n  //\n  updateTokensOnSale: async () => {\n    try {\n      const { contract, setTokensOnSale } = get()\n      if (!contract) throw new Error('No contract found')\n\n      const tokensForSale = (await contract.getAllOnSale()).reduce((acc: TokenProps[], b: any) => {\n        if (b.uri !== '') {\n          acc.push({ id: b.id, price: b.price, name: b.name, uri: b.uri })\n        }\n\n        return acc\n      }, [] as TokenProps[])\n      setTokensOnSale(tokensForSale)\n      return true\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  },\n  //\n  setTokenSale: async (id: string, price: BigNumber, onSale: boolean = false) => {\n    try {\n      const { contract, user, setTransaction } = get()\n      if (!contract) throw new Error('No contract found')\n      if (!user) throw new Error('No user found')\n\n      const tx = await contract.setTokenSale(id, onSale, price, { from: user.address })\n      setTransaction(tx)\n      return true\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  },\n  //\n  transferToken: async (id: string, to: string) => {\n    try {\n      const { contract, user, setTransaction } = get()\n      if (!contract) throw new Error('No contract found')\n      if (!user) throw new Error('No user found')\n\n      const tx = await contract['safeTransferFrom(address,address,uint256)'](user.address, to, id, {\n        from: user.address,\n      })\n\n      // console.log(tx)\n      setTransaction(tx)\n    } catch (e) {\n      console.log(e)\n    }\n  },\n}))\n\nexport { useAppState }\n\n// const getAllTokens = async ({ contract }: Props) => {\n//   try {\n//     const logs = await contract.provider.getLogs({\n//       address: contract.address,\n//       fromBlock: 0,\n//       toBlock: 'latest',\n//     })\n\n//     const decoder = new utils.AbiCoder()\n\n//     console.log(contract)\n\n//     const tokens = await Promise.all<TokenProps>(\n//       await logs.reduce<any>(async (acc: TokenProps[], log: Log) => {\n//         const [from] = decoder.decode(['address'], log.topics[1])\n\n//         const list = await acc\n\n//         if (from === utils.getAddress('0x0000000000000000000000000000000000000000')) {\n//           const tokenId =\n//             log.topics && log.topics[3]\n//               ? utils.formatUnits(BigNumber.from(log.topics[3]), 'wei')\n//               : undefined\n\n//           const token = tokenId && (await contract.tokenMeta(tokenId))\n//           if (token) {\n//             list.push(token)\n//           }\n//         }\n//         return list\n//       }, Promise.resolve([]) as Promise<TokenProps[]>)\n//     )\n\n//     return tokens\n//   } catch (e) {\n//     console.log(e)\n//   }\n// }\n","import { useAppState } from '../state'\n\nexport const fetcherETHUSD = async (url: string) => {\n  try {\n    const { setEthPrice } = useAppState.getState()\n\n    const {\n      result: { ethusd },\n    } = await (await fetch(url)).json()\n    setEthPrice(ethusd)\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport const fetcherMetadata = async (url: string) => {\n  try {\n    return await (await fetch(url)).json()\n  } catch (e) {\n    return { error: (e as Error).message }\n  }\n}\n\nexport const fetchOwner = async (id: string) => {\n  try {\n    const { contract } = useAppState.getState()\n    if (!contract) throw new Error('Contract not found')\n\n    return await contract?.ownerOf(id)\n  } catch (e) {\n    return { error: (e as Error).message }\n  }\n}\n","const toShort = (value: string, factor: number = 5) => {\n  const slice = Math.round(value.length / factor)\n  return `${value.substr(0, slice)}...${value.substr(value.length - slice, value.length)}`\n}\n\nexport { toShort }\n","import { FormEvent, MouseEvent, useState } from 'react'\nimport { utils, BigNumber, constants } from 'ethers'\nimport {\n  Spinner,\n  Box,\n  Flex,\n  Card,\n  Button,\n  Image,\n  Input,\n  Text,\n  Heading,\n  Divider,\n  NavLink,\n} from 'theme-ui'\nimport useSWR from 'swr'\nimport { useAppState } from '../../state'\nimport { fetcherMetadata, fetchOwner } from '../../utils/fetchers'\nimport { formatPriceEth, METADATA_API, toShort } from '../../utils'\n\nexport type TokenProps = {\n  id: string\n  uri: string\n  price: BigNumber\n  name: string\n}\n\nexport type TokenCompProps = {\n  token: TokenProps\n  isOnSale?: boolean\n  onTransfer?: boolean\n  onBuy?: boolean\n  onSale?: boolean\n}\n\nconst Token = ({ token, isOnSale, onTransfer, onBuy, onSale }: TokenCompProps) => {\n  const [transfer, setTransfer] = useState<boolean>(false)\n  const [onSaleActive, setOnSale] = useState<boolean>(false)\n  const [address, setAddress] = useState<string>('')\n  const [price, setPrice] = useState<string>('')\n  const [buyError, setBuyError] = useState('');\n  const { user, ethPrice, contractDetails, transferToken, buyToken, setTokenSale } = useAppState()\n\n  const onTransferClick = async (e: FormEvent | MouseEvent) => {\n    e.preventDefault()\n    if (onTransfer && utils.isAddress(address)) {\n      transferToken(token.id, address)\n      setTransfer(false)\n    }\n  }\n\n  const onBuyClick = async (e: MouseEvent) => {\n    e.preventDefault()\n    \n    if (onBuy) {\n      const r = await buyToken(token.id, token.price);\n\n      // @ts-ignore\n      if (r?.error) {\n        // @ts-ignore\n        setBuyError(r.error);\n      }\n    }\n  }\n\n  const onSaleClick = async (e: MouseEvent) => {\n    e.preventDefault()\n    if (!onSale) return\n    try {\n      await setTokenSale(token.id, utils.parseEther(price), true)\n      setOnSale(false)\n    } catch (e) {\n      throw e\n    }\n  }\n\n  const { data: owner } = useSWR(token.id, fetchOwner)\n  const { data } = useSWR(`${METADATA_API}/token/${token.id}`, fetcherMetadata)\n\n  const tokenPriceEth = formatPriceEth(token.price, ethPrice)\n\n  if (!data)\n    return (\n      <Card variant=\"nft\">\n        <Spinner />\n      </Card>\n    )\n\n  if (!data.name) return null\n\n  return (\n    <Card variant=\"nft\">\n      <Image\n        sx={{ width: '100%', bg: 'white', borderBottom: '1px solid black' }}\n        src={data.image}\n      />\n      <Box p={3} pt={2}>\n        <Heading as=\"h2\">{data.name}</Heading>\n        <Divider variant=\"divider.nft\" />\n        <Box>\n          <Text sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>Price</Text>\n          <Heading as=\"h3\" sx={{ color: 'green', m: 0, fontWeight: 'bold' }}>\n            {constants.EtherSymbol} {Number(utils.formatEther(token.price)).toFixed(2)}{' '}\n            <Text sx={{ color: 'navy' }} as=\"span\" variant=\"text.body\">\n              ({tokenPriceEth})\n            </Text>\n          </Heading>\n          {owner && typeof owner === 'string' && !onTransfer && (\n            <Box mt={2}>\n              <Text as=\"p\" sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>\n                Owner\n              </Text>\n              <NavLink\n                target=\"_blank\"\n                href={`https://goerli.etherscan.io/address/${owner}`}\n                variant=\"owner\"\n                style={{\n                  textOverflow: 'ellipsis',\n                  width: '100%',\n                  position: 'relative',\n                  overflow: 'hidden',\n                }}\n              >\n                {toShort(owner)}\n              </NavLink>\n            </Box>\n          )}\n          <Box mt={2}>\n            <NavLink\n              target=\"_blank\"\n              href={`https://testnets.opensea.io/assets/${contractDetails?.address}/${token.id}`}\n              variant=\"openSea\"\n            >\n              View on Opensea.io\n            </NavLink>\n          </Box>\n        </Box>\n\n        {onTransfer && (\n          <Flex mt={3} sx={{ justifyContent: 'center' }}>\n            {transfer && (\n              <Box sx={{ width: '100%' }}>\n                <Flex\n                  onSubmit={onTransferClick}\n                  sx={{ width: '100%', flexDirection: 'column' }}\n                  as=\"form\"\n                >\n                  <Input\n                    onChange={e => setAddress(e.currentTarget.value)}\n                    placeholder=\"ETH Address 0x0...\"\n                  />\n                </Flex>\n                <Flex mt={2}>\n                  <Button sx={{ bg: 'green' }} onClick={onTransferClick} variant=\"quartiary\">\n                    Confirm\n                  </Button>\n                  <Button\n                    sx={{ bg: 'red' }}\n                    ml={2}\n                    onClick={() => setTransfer(false)}\n                    variant=\"quartiary\"\n                  >\n                    Cancel\n                  </Button>\n                </Flex>\n              </Box>\n            )}\n            {onSaleActive && (\n              <Box sx={{ width: '100%' }}>\n                <Flex\n                  onSubmit={onTransferClick}\n                  sx={{ width: '100%', flexDirection: 'column' }}\n                  as=\"form\"\n                >\n                  <Input\n                    onChange={e => setPrice(e.currentTarget.value)}\n                    placeholder=\"Token Price in ETH\"\n                  />\n                </Flex>\n                <Flex mt={2}>\n                  <Button sx={{ bg: 'green' }} onClick={onSaleClick} variant=\"quartiary\">\n                    Confirm\n                  </Button>\n                  <Button\n                    sx={{ bg: 'red' }}\n                    ml={2}\n                    onClick={() => setOnSale(false)}\n                    variant=\"quartiary\"\n                  >\n                    Cancel\n                  </Button>\n                </Flex>\n              </Box>\n            )}\n            {!transfer && !onSaleActive && (\n              <Flex sx={{ flexDirection: 'column', width: '100%', justifyContent: 'center' }}>\n                <Button onClick={() => setTransfer(!transfer)} variant=\"tertiary\">\n                  Transfer\n                </Button>\n                {isOnSale ? (\n                  <Button\n                    mt={2}\n                    onClick={() => onSale && setTokenSale(token.id, token.price, false)}\n                    variant=\"tertiary\"\n                  >\n                    Remove from Sale\n                  </Button>\n                ) : (\n                  <Button mt={2} onClick={() => setOnSale(!onSaleActive)} variant=\"tertiary\">\n                    Put Token for Sale\n                  </Button>\n                )}\n              </Flex>\n            )}\n          </Flex>\n        )}\n        {onBuy && (\n          <Flex mt={3} sx={{ justifyContent: 'center', width: '100%' }}>\n            <Button\n              sx={{\n                opacity: !!user?.ownedTokens.find(\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\n                )\n                  ? 0.5\n                  : 1,\n                pointerEvents: !!user?.ownedTokens.find(\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\n                )\n                  ? 'none'\n                  : 'visible',\n              }}\n              onClick={onBuyClick}\n              variant=\"quartiary\"\n            >\n              {buyError ? buyError : 'Buy Token'}\n            </Button>\n          </Flex>\n        )}\n      </Box>\n    </Card>\n  )\n}\n\nexport { Token }\n","\n\nexport const ETHSCAN_API = `https://api.nft.fluuu.id/prod/ethusd`\nexport const METADATA_API = 'https://api.nft.fluuu.id/prod'\n\nexport * from './toShort'\nexport * from './formatPriceEth'\n","import { BigNumberish, utils } from 'ethers'\n\nconst formatPriceEth = (price: BigNumberish, ethPrice: string = '0') =>\n  new Intl.NumberFormat('us-GB', {\n    style: 'currency',\n    currency: 'USD',\n  }).format(Number(utils.formatEther(price)) * Number(ethPrice))\n\nexport { formatPriceEth }\n","import { useHistory, useLocation } from 'react-router'\nimport { Box, NavLink, Flex, Heading, Image, Text } from 'theme-ui'\nimport { useAppState } from '../../state'\nimport { UserMenu } from '..'\n\nexport type HeaderProps = {\n  //\n}\n\nconst Header = () => {\n  const history = useHistory()\n  const location = useLocation()\n\n  const { user, isAuthenticated } = useAppState()\n\n  return (\n    <Box bg=\"black\">\n      <Flex sx={{ alignItems: 'center', p: 3 }} as=\"nav\">\n        <Image\n          onClick={() => {\n            history.push('/')\n          }}\n          sx={{ width: 50, cursor: 'pointer' }}\n          src=\"/static/logo.png\"\n        />\n        <Heading sx={{ ml: [1, 2], color: 'white' }} as=\"h4\">\n          ERC721 Marketplace{' '}\n          <Text sx={{ display: ['none', 'block'] }}>+ OpenSea.io on Goerli Network</Text>\n        </Heading>\n        <UserMenu />\n      </Flex>\n      {isAuthenticated && user && (\n        <Flex bg=\"midGray\" py={3} sx={{ justifyContent: 'center' }}>\n          <NavLink\n            sx={{\n              pointerEvents: location.pathname === '/' ? 'none' : 'visible',\n              color: location.pathname === '/' ? 'green' : 'white',\n            }}\n            onClick={() => history.push('/')}\n          >\n            Marketplace\n          </NavLink>\n          <Box sx={{ width: 50 }} />\n          <NavLink\n            sx={{\n              pointerEvents: location.pathname === '/profile' ? 'none' : 'visible',\n              color: location.pathname === '/profile' ? 'green' : 'white',\n            }}\n            onClick={() => history.push('/profile')}\n          >\n            Profile\n          </NavLink>\n        </Flex>\n      )}\n    </Box>\n  )\n}\n\nexport { Header }\n","import { BigNumber, utils } from 'ethers'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Box, Button, Flex, Grid, Heading } from 'theme-ui'\nimport { useAppState } from '../../state'\nimport { Token } from '..'\n\nexport type GalleryProps = {}\ntype StateOrder = 'price' | 'alpha'\n\nconst Gallery = () => {\n  const { user, tokensOnSale } = useAppState()\n  const updateTokensOnSale = useAppState(\n    useCallback(({ updateTokensOnSale }) => updateTokensOnSale, [])\n  )\n\n  const [order, setOrder] = useState<StateOrder>('alpha')\n\n  useEffect(() => {\n    updateTokensOnSale()\n  }, [updateTokensOnSale])\n\n  return (\n    <Box>\n      <Heading as=\"h1\">Marketplace</Heading>\n      <Flex sx={{ alignItems: 'center' }} mb={3}>\n        <Heading as=\"h3\" sx={{ color: 'lightGray' }}>\n          Order:\n        </Heading>\n        <Flex ml={3}>\n          <Button\n            mr={2}\n            onClick={() => setOrder('alpha')}\n            variant=\"filter\"\n            disabled={order === 'alpha'}\n          >\n            Alphabetically\n          </Button>\n          <Button onClick={() => setOrder('price')} variant=\"filter\" disabled={order === 'price'}>\n            Price\n          </Button>\n        </Flex>\n      </Flex>\n      <Grid gap={4} columns={['1fr 1fr', '1fr 1fr', '1fr 1fr 1fr']}>\n        {tokensOnSale\n          ?.sort((a, b) =>\n            order === 'alpha'\n              ? BigNumber.from(a.id)\n                  .toString()\n                  .localeCompare(BigNumber.from(b.id).toString(), undefined, { numeric: true })\n              : Number(utils.formatEther(a.price.sub(b.price)))\n          )\n          .map((i, index) => (\n            <Token onBuy={!user?.ownedTokens.find(t => t.id === i.id)} token={i} key={index} />\n          ))}\n      </Grid>\n    </Box>\n  )\n}\n\nexport { Gallery }\n","import { Flex, Heading, Box } from 'theme-ui'\nimport { useHistory } from 'react-router'\nimport { EtherSymbol } from '@ethersproject/constants'\nimport { useAppState } from '../../state'\nimport { Identicon } from '..'\nimport { toShort } from '../../utils'\n\nexport type UserMenuProps = {\n  //\n}\n\nconst UserMenu = () => {\n  const { user, isAuthenticated } = useAppState()\n\n  const history = useHistory()\n\n  return (\n    <Flex sx={{ ml: 'auto', justifySelf: 'flex-end' }}>\n      {isAuthenticated && user && (\n        <>\n          <Box sx={{ display: ['none', 'block'] }}>\n            <Heading sx={{ p: 0, color: 'white' }} as=\"h4\">\n              {toShort(user.address)}\n            </Heading>\n            <Heading sx={{ p: 0, mt: 1, textAlign: 'right', color: 'white' }} as=\"h5\">\n              {EtherSymbol}\n              {user.balance}\n            </Heading>\n          </Box>\n          <Box\n            onClick={() => {\n              history.push('/profile')\n            }}\n            sx={{\n              cursor: 'pointer',\n              ml: [0, 3],\n              height: 30,\n              width: 30,\n              borderRadius: '100%',\n            }}\n          >\n            <Identicon size={30} address={user.address} />\n          </Box>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport { UserMenu }\n","import { ElementType } from 'react'\nimport { Redirect } from 'react-router'\nimport { Route } from 'react-router-dom'\nimport { useAppState } from '../../state'\n\ntype PrivateRouteProps = {\n  component: ElementType\n  path: string\n}\n\nconst PrivateRoute = ({ component: Component, path }: PrivateRouteProps) => {\n  const { isAuthenticated } = useAppState()\n\n  return (\n    <Route\n      path={path}\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />)}\n    />\n  )\n}\n\nexport { PrivateRoute }\n","import { useEffect, useRef } from 'react'\nimport { Flex } from 'theme-ui'\nimport jazzicon from 'jazzicon'\n\nexport type IdenticonProps = {\n  address: string\n  size?: number\n}\n\nconst Identicon = ({ address, size = 16 }: IdenticonProps) => {\n  const ref = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    if (!ref.current) return\n    try {\n      ref.current.innerHTML = ''\n      ref.current.appendChild(jazzicon(size, parseInt(address.slice(2, 10), 16)))\n    } catch (e) {\n      console.log(e)\n    }\n  }, [address, size])\n\n  return (\n    <Flex\n      ref={ref}\n      sx={{\n        justifyContent: 'center',\n        width: size + 2,\n      }}\n    />\n  )\n}\n\nexport { Identicon }\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { Card, Flex, Spinner } from 'theme-ui'\nimport { useAppState } from '../../state'\nimport { toShort } from '../../utils'\n\nconst TransactionProgress = () => {\n  const { setTransaction, setUser, updateTokensOnSale } = useAppState(\n    useCallback(\n      ({ setTransaction, setUser, updateTokensOnSale }) => ({\n        setTransaction,\n        setUser,\n        updateTokensOnSale,\n      }),\n      []\n    )\n  )\n\n  const transactionRef = useRef(useAppState.getState().transaction)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const update = useCallback(async () => {\n    await setUser()\n    setTransaction(undefined)\n    updateTokensOnSale()\n    setLoading(false)\n  }, [setTransaction, setUser, updateTokensOnSale])\n\n  useEffect(() => {\n    useAppState.subscribe(async ({ transaction }) => {\n      try {\n        transactionRef.current = transaction\n        if (!transaction) return\n        setLoading(true)\n        const receipt = await transaction.wait()\n        if (receipt.confirmations >= 1) {\n          update()\n        }\n      } catch (e) {\n        console.log('transaction', e)\n        setLoading(false)\n      }\n    })\n\n    return () => {\n      useAppState.destroy()\n    }\n  }, [update])\n\n  if (!loading) return null\n\n  return (\n    <Card variant=\"transaction\">\n      <Flex sx={{ alignItems: 'center' }}>\n        <Spinner size={20} color=\"white\" sx={{ mr: 2 }} /> Transaction:{' '}\n        {toShort(transactionRef.current.hash)}\n      </Flex>\n    </Card>\n  )\n}\n\nexport { TransactionProgress }\n","import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Flex, Button, Spinner, Image } from 'theme-ui'\nimport { useWeb3React } from '@web3-react/core'\nimport { ConnectorNames, connectorsByName } from '../../connectors'\nimport { useAppState } from '../../state'\n\nconst iconsMap = {\n  [ConnectorNames.Metamask]: 'https://docs.metamask.io/metamask-fox.svg',\n  [ConnectorNames.WalletConnect]:\n    'https://raw.githubusercontent.com/WalletConnect/walletconnect-assets/b9644035864fb4b6d6ed55e0f67ad302377bd6f1/svg/original/walletconnect-logo.svg',\n}\n\nconst Login = () => {\n  const { activatingConnector, setActivatingConnector } = useAppState()\n  const { connector, activate } = useWeb3React()\n  return (\n    <Flex sx={{ justifyContent: 'center' }}>\n      {Object.keys(connectorsByName).map((name: string) => {\n        const currentConnector = connectorsByName[name as keyof typeof connectorsByName]\n        const activating = currentConnector === activatingConnector\n        const connected = currentConnector === connector\n\n        return (\n          <Button\n            mt={2}\n            mr={2}\n            variant=\"connect\"\n            sx={{\n              borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n              position: 'relative',\n              maxWidth: 250,\n            }}\n            key={name}\n            onClick={() => {\n              setActivatingConnector(currentConnector)\n              activate(connectorsByName[name as keyof typeof connectorsByName] as AbstractConnector)\n            }}\n          >\n            {iconsMap[name as keyof typeof connectorsByName] && (\n              <Image\n                sx={{ width: 35, height: 35 }}\n                mr={3}\n                src={iconsMap[name as keyof typeof connectorsByName]}\n              />\n            )}\n\n            {name}\n            {activating && <Spinner size={20} color=\"white\" sx={{ ml: 3 }} />}\n          </Button>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport { Login }\n","import { useWeb3React } from '@web3-react/core'\nimport { Gallery, Login } from '../components'\nimport { useAppState } from '../state'\n\nconst Marketplace = () => {\n  const { user } = useAppState()\n  const { active } = useWeb3React()\n\n  return (\n    <>\n      {!user && <Login />}\n      {user && active && <Gallery />}\n    </>\n  )\n}\n\nexport { Marketplace }\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport { Marketplace, Profile, Connect } from './'\nimport { Header, PrivateRoute, TransactionProgress } from '../components'\nimport { Container } from 'theme-ui'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\nconst Root = () => {\n  return (\n    <Router basename=\"/nft-market-fork/build/\">\n      <Header />\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Connect>\n          <Container>\n            <Switch>\n              <PrivateRoute path=\"/profile\" component={Profile} />\n              <Route exact path=\"/\" component={Marketplace} />\n            </Switch>\n            <TransactionProgress />\n          </Container>\n        </Connect>\n      </Web3ReactProvider>\n    </Router>\n  )\n}\n\nexport { Root }\n","import { utils } from 'ethers'\nimport { Text, Box, Heading, Grid, Divider } from 'theme-ui'\nimport { Token } from '../components'\nimport { useAppState } from '../state'\n\nexport type ProfileProps = {}\n\nconst Profile = () => {\n  const { user, tokensOnSale } = useAppState()\n\n  if (!user) return null\n\n  const { address, balance, ownedTokens } = user\n\n  return (\n    <Box>\n      <Heading as=\"h1\">My Profile</Heading>\n      <Grid columns={['1fr', '1fr 1fr']} sx={{ overflow: 'hidden', gap: '0 20px' }}>\n        <Box>\n          <Heading as=\"h4\" sx={{ color: 'green' }}>\n            Address\n          </Heading>\n          <Text>{address}</Text>\n        </Box>\n        <Box>\n          <Heading as=\"h4\" sx={{ color: 'green' }}>\n            Balance\n          </Heading>\n          <Text>Ξ {balance}</Text>\n        </Box>\n      </Grid>\n      <Divider variant=\"divider.nft\" sx={{ my: 7 }} />\n      <Box my={5}>\n        {ownedTokens && ownedTokens.length > 0 ? (\n          <Box>\n            <Heading as=\"h2\">\n              My items{' '}\n              <Text variant=\"text.body\" as=\"span\">\n                ({ownedTokens.length} item)\n              </Text>\n            </Heading>\n            <Grid gap={4} columns={['1fr 1fr', '1fr 1fr 1fr']}>\n              {ownedTokens.map((t, index) => (\n                <Token\n                  isOnSale={\n                    !!tokensOnSale?.find(a => utils.formatUnits(a.id) === utils.formatUnits(t.id))\n                  }\n                  onSale\n                  onTransfer\n                  token={t}\n                  key={index}\n                />\n              ))}\n            </Grid>\n          </Box>\n        ) : (\n          ownedTokens && (\n            <Box>\n              <Heading as=\"h2\">You don't own any NFT tokens</Heading>\n            </Box>\n          )\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport { Profile }\n","import { FC, useEffect, useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\n\nimport { Container, Text, Heading } from 'theme-ui'\nimport useSWR from 'swr'\nimport { useEagerConnect, useInactiveListener } from '../hooks/web3'\nimport { ETHSCAN_API } from '../utils'\nimport { fetcherETHUSD } from '../utils/fetchers'\nimport { useAppState } from '../state'\n\nfunction getErrorMessage(error: Error) {\n  console.log(error)\n\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network. Please connect to Rinkeby network\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorWalletConnect\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nconst Connect: FC = ({ children }) => {\n  const { activatingConnector } = useAppState()\n  const { library, chainId, account, error } = useWeb3React()\n\n  const { setContract, setUser } = useAppState(\n    useCallback(\n      ({ setContract, setUser }) => ({\n        setContract,\n        setUser,\n      }),\n      []\n    )\n  )\n\n  useSWR(ETHSCAN_API, fetcherETHUSD)\n\n  useEffect(() => {\n    if (!chainId || !account || !library) return\n\n    const update = async () => {\n      try {\n        await setContract(library, chainId)\n        setUser(account)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    update()\n  }, [chainId, account, library, setContract, setUser])\n\n  const triedEager = useEagerConnect()\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n    <>\n      {error ? (\n        <Container>\n          <Heading as=\"h2\">❌ Something is not right</Heading>\n          <Text sx={{ mt: 3 }}>{getErrorMessage(error)}</Text>\n        </Container>\n      ) : (\n        children\n      )}\n    </>\n  )\n}\n\nexport { Connect }\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n// import { URI_AVAILABLE } from '@web3-react/walletconnect-connector'\n\nexport function useEagerConnect() {\n  const { activate, active, connector } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    // console.log(connector)\n\n    // if (connector === walletconnect) {\n    //   walletconnect.on(URI_AVAILABLE, uri => {\n    //     console.log(uri)\n    //   })\n    // }\n\n    if (connector === injected) {\n      injected.isAuthorized().then((isAuthorized: boolean) => {\n        if (isAuthorized) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      })\n    }\n  }, [activate, connector])\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\n// type OnChangeProps = {\n//   account?: string\n//   chainId?: string | number\n// }\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error } = useWeb3React()\n\n  useEffect(() => {\n    const { ethereum } = window as any\n\n    if (ethereum) ethereum.autoRefreshOnNetworkChange = true\n\n    // if (ethereum && ethereum.on && !active && !error && !suppress) {\n    //   const handleConnect = () => {\n    //     console.log(\"!!!!! Handling 'connect' event\")\n    //     activate(injected)\n    //   }\n    //   const handleChainChanged = (chainId: string | number) => {\n    //     console.log(\"11111 Handling 'chainChanged' event with payload\", chainId)\n    //     activate(injected)\n    //   }\n    //   const handleAccountsChanged = (accounts: string[]) => {\n    //     console.log(\"11111 Handling 'accountsChanged' event with payload\", accounts)\n    //     if (accounts.length > 0) {\n    //       activate(injected)\n    //     }\n    //   }\n    //   const handleNetworkChanged = (networkId: string | number) => {\n    //     console.log(\"11111 Handling 'networkChanged' event with payload\", networkId)\n    //     activate(injected)\n    //   }\n\n    //   ethereum.on('connect', handleConnect)\n    //   ethereum.on('chainChanged', handleChainChanged)\n    //   ethereum.on('accountsChanged', handleAccountsChanged)\n    //   ethereum.on('networkChanged', handleNetworkChanged)\n\n    //   return () => {\n    //     if (ethereum.removeListener) {\n    //       ethereum.removeListener('connect', handleConnect)\n    //       ethereum.removeListener('chainChanged', handleChainChanged)\n    //       ethereum.removeListener('accountsChanged', handleAccountsChanged)\n    //       ethereum.removeListener('networkChanged', handleNetworkChanged)\n    //     }\n    //   }\n    // }\n  }, [active, error, suppress])\n}\n","import { SxProp, Theme } from 'theme-ui'\n\nconst defaultButton = {\n  border: 0,\n  fontFamily: 'body',\n  fontWeight: 'normal',\n  lineHeight: 'body',\n  fontSize: [1, 2],\n  paddingX: 3,\n  paddingY: 2,\n  outline: 'none',\n  whiteSpace: 'nowrap',\n  cursor: 'pointer',\n  transition: 'all 0.1s ease-out',\n  '&:hover': {\n    opacity: 0.7,\n  },\n} as SxProp\n\nexport const Palette = {\n  text: '#FFF',\n  white: '#fff',\n  background: '#333',\n  primary: '#111',\n  secondary: '#333',\n  gray: '#F7F9FA',\n  lightGray: '#e0e0e0',\n  midGray: '#222',\n  lightBlue: '#EFF7FF',\n  navy: '#e0e0e0',\n  green: 'rgb(99, 255, 203)',\n  amber: '#D58408',\n  lightGreen: '#AEC',\n  red: '#999',\n  muted: '#999',\n  transparent: 'transparent',\n  white20: 'rgba(255, 255, 255, .2)',\n  black66: 'rgba(0, 0, 0, .66)',\n}\n\nexport type PaletteKeys = keyof typeof Palette\n\nexport const Sizes = {\n  header: 60,\n  container: 1020,\n  button: [100, 250],\n  logo: 60,\n  sidemenu: 240,\n  chart: 950,\n}\n\nexport default {\n  breakpoints: ['40em', '52em', '64em'],\n  space: [0, 4, 10, 16, 20, 30, 42, 56, 78, 125, 150],\n  fontSizes: [10, 12, 16, 26, 36, 50, 75],\n  fonts: {\n    body: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    heading: 'inherit',\n  },\n  layout: {\n    container: {\n      py: 4,\n      px: 3,\n      pb: 10,\n    },\n  },\n  sizes: {\n    ...Sizes,\n  },\n  cards: {\n    nft: {\n      bg: 'background',\n      border: '1px solid',\n      borderColor: 'muted',\n      textAlign: 'left',\n    },\n    transaction: {\n      bg: 'amber',\n      position: 'fixed',\n      top: 50,\n      right: 20,\n      p: 4,\n      borderRadius: 10,\n    },\n  },\n  links: {\n    nav: {\n      color: 'white',\n      cursor: 'pointer',\n      transition: 'all .2s ease-out',\n      '&:hover': {\n        opacity: 0.5,\n        color: 'white',\n      },\n    },\n    openSea: {\n      color: 'green',\n      fontSize: 1,\n      opacity: 0.5,\n      '&:after': {\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='rgb(99, 255, 203)' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\n        ml: 1,\n      },\n      transition: 'all .2s ease-out',\n      '&:hover': {\n        opacity: 1,\n        color: 'green',\n      },\n    },\n    owner: {\n      color: 'white',\n      fontSize: 1,\n      opacity: 0.5,\n      transition: 'all .2s ease-out',\n      '&:hover': {\n        opacity: 1,\n        color: 'white',\n      },\n      '&:after': {\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='white' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\n        ml: 1,\n      },\n    },\n  },\n  buttons: {\n    primary: {\n      ...defaultButton,\n      fontWeight: 'bold',\n      minWidth: 'button',\n      bg: 'primary',\n      color: 'white',\n      textAlign: 'center',\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n\n    secondary: {\n      cursor: 'pointer',\n      variant: 'buttons.primary',\n      bg: 'secondary',\n      fontWeight: 'body',\n    },\n    tertiary: {\n      variant: 'buttons.secondary',\n      color: 'white',\n      bg: 'primary',\n    },\n    quartiary: {\n      variant: 'buttons.tertiary',\n      bg: 'green',\n      color: 'black',\n      minWidth: 'auto',\n      py: 2,\n    },\n    filter: {\n      variant: 'buttons.tertiary',\n      bg: 'lightGreen',\n      color: 'black',\n      minWidth: 'auto',\n      py: 1,\n      fontSize: 1,\n      '&:disabled': {\n        pointerEvents: 'none',\n        opacity: 0.5,\n      },\n    },\n    connect: {\n      variant: 'buttons.tertiary',\n      py: 4,\n      px: 5,\n    },\n  },\n  fontWeights: {\n    heading: 300,\n    body: 400,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.333333333,\n    heading: 1.066666667,\n    subheading: 2,\n  },\n  colors: {\n    ...Palette,\n  },\n  divider: {\n    nft: {\n      color: 'muted',\n      height: 1,\n      my: 2,\n    },\n  },\n  forms: {\n    input: {\n      paddingX: 2,\n      paddingY: 2,\n      borderRadius: '5px',\n      bg: 'white',\n      color: 'primary',\n    },\n  },\n  text: {\n    body: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body',\n      fontSize: 1,\n    },\n    heading: {\n      py: 2,\n    },\n    bold: {\n      fontWeight: 'bold',\n    },\n    paragraph: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 2,\n      fontSize: 2,\n      letterSpacing: 0.44,\n      color: 'white',\n    },\n    h1: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 6,\n      letterSpacing: -0.44,\n    },\n    h2: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 5,\n      letterSpacing: -0.44,\n    },\n    h3: {\n      fontFamily: 'heading',\n      lineHeight: 'subheading',\n      fontWeight: 'heading',\n      fontSize: 3,\n    },\n    h4: {\n      fontFamily: 'heading',\n      lineHeight: 'subheading',\n      fontWeight: 'bold',\n      fontSize: [1, 2],\n    },\n    h5: {\n      fontFamily: 'heading',\n      fontWeight: 'bold',\n      lineHeight: 1.6,\n      fontSize: 0,\n      letterSpacing: 1.5,\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    a: {\n      color: 'primary',\n      '&:hover': {\n        color: 'inherit',\n      },\n    },\n    hr: {\n      height: 1,\n      opacity: 0.5,\n      bg: 'black',\n      color: 'black',\n      my: 6,\n    },\n  },\n} as Theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'theme-ui'\nimport reportWebVitals from './reportWebVitals'\nimport { Root } from './layout'\nimport theme from './theme'\n\n// Sentry.init({\n//   dsn: 'https://06951a956c7a4a6db2f776b1bc697efd@o72860.ingest.sentry.io/5842491',\n//   integrations: [new Integrations.BrowserTracing()],\n//   enabled: process.env.NODE_ENV !== 'development',\n\n//   // Set tracesSampleRate to 1.0 to capture 100%\n//   // of transactions for performance monitoring.\n//   // We recommend adjusting this value in production\n//   tracesSampleRate: 1.0,\n// })\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Root />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}